TNS Packet olayı :

0xa8  --> 
>>> ascii(0xa8)
'168'


>>> "0x%04x" % 168
'0x00a8'

msg="(DESCRIPTION=(CONNECT_DATA=(SID=OEMREP)(CID=(PROGRAM=)(HOST=__jdbc__)(USER=)))(ADDRESS=(PROTOCOL=tcp)(HOST=192.200.11.9)(PORT=1521)))"
PyByteArray_FromStringAndSize(msg)

TNS Packet



0      8      16            31 
+--------------+--------------+ 
| Packet Length| Packet Chksm |  
+------+-------+--------------+  8 byte header
| Type | Rsrvd | Header Chksm |  
+------+-------+--------------+ 
|        P A Y L O A D        |
+-----------------------------+


Packet and Header checksums are not generated by default and left as 0s.

Below is the listing of different TNS packet types:

Type

Description

1 Connect
2 Accept
3 ACK
4 Refuse
5 Redirect
6 Data
7 NULL
8 ----
9 ABORT
10----
11Resend
12Marker
13Attention
14Control



Normal Paket 162 karakter; SID 6 karakter olunca ikinci byte 162+6 oluyor
Dikkat host kısmında da paket boyu değişiyor

OEMREP için giden pakate ve açıklaması

0x00,   ==> 00 Paket boyu
 
0xa8,   == > 168 Paketin boyu ( değişken kısım)

0x00, 0x00, ==> Paket Check Sum are not generated by default and left as 0s.
0x01, ==> type 01 means Connect 
0x00, 0x00, 0x00, ( Reserved + Header Checksum gerisi Data Payload)
0x01, 0x34, 0x01, 0x2c, 0x00, 0x00, 0x08, 0x00, 
0x7f, 0xff, 0x4f, 0x98, 0x00, 0x00, 0x00, 0x01, 
0x00, 0x86, 0x00, 0x22, 0x00, 0x00, 0x00, 0x00, 
0x01, 0x01, 0x28, 0x44, 0x45, 0x53, 0x43, 0x52, 
0x49, 0x50, 0x54, 0x49, 0x4f, 0x4e, 0x3d, 0x28, 
0x43, 0x4f, 0x4e, 0x4e, 0x45, 0x43, 0x54, 0x5f, 
0x44, 0x41, 0x54, 0x41, 0x3d, 0x28, 0x53, 0x49, 
0x44, 0x3d, 

0x4f, 0x45, 0x4d, 0x52, 0x45, 0x50,  ==>>> OEMREP  ( SID) 162+6=168 ( Değişken kısım )

0x0d, 0x29, 0x28, 0x43, 0x49, 0x44, 0x3d, 0x28, 0x50, 0x52,
0x4f, 0x47, 0x52, 0x41, 0x4d, 0x3d, 0x29, 0x28, 
0x48, 0x4f, 0x53, 0x54, 0x3d, 0x5f, 0x5f, 0x6a, 
0x64, 0x62, 0x63, 0x5f, 0x5f, 0x29, 0x28, 0x55, 
0x53, 0x45, 0x52, 0x3d, 0x29, 0x29, 0x29, 0x28,
0x41, 0x44, 0x44, 0x52, 0x45, 0x53, 0x53, 0x3d, 
0x28, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x43, 0x4f, 
0x4c, 0x3d, 0x74, 0x63, 0x70, 0x29, 0x28, 0x48, 
0x4f, 0x53, 0x54, 0x3d, 0x31, 0x39, 0x32, 0x2e, 
0x32, 0x30, 0x30, 0x2e, 0x31, 0x31, 0x2e, 0x39, 
0x29, 0x28, 0x50, 0x4f, 0x52, 0x54, 0x3d, 0x31,
0x35, 0x32, 0x31, 0x29, 0x29, 0x29 

PAketin Ascii görünüşü

.........4.,......O........"......(DESCRIPTION=(CONNECT_DATA=(SID=OEMREP
)(CID=(PROGRAM=)(HOST=__jdbc__)(USER=)))(ADDRESS=(PROTOCOL=tcp)(HOST=192.200.11.9)(PORT=1521)))

Dönen Cevap

0x00, 0x67, 0x00, 0x00, 
0x04, type 04 means REFUSE 
0x00, 0x00, 0x00, 
0x22, 0x00, 0x00, 0x5b, 0x28, 0x44, 0x45, 0x53, 
0x43, 0x52, 0x49, 0x50, 0x54, 0x49, 0x4f, 0x4e, 
0x3d, 0x28, 0x54, 0x4d, 0x50, 0x3d, 0x29, 0x28, 
0x56, 0x53, 0x4e, 0x4e, 0x55, 0x4d, 0x3d, 0x32, 
0x30, 0x32, 0x33, 0x37, 0x35, 0x36, 0x38, 0x30, 
0x29, 0x28, 0x45, 0x52, 0x52, 0x3d, 0x31, 0x32, 
0x35, 0x30, 0x35, 0x29, 0x28, 0x45, 0x52, 0x52, 
0x4f, 0x52, 0x5f, 0x53, 0x54, 0x41, 0x43, 0x4b, 
0x3d, 0x28, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x3d, 
0x28, 0x43, 0x4f, 0x44, 0x45, 0x3d, 0x31, 0x32, 
0x35, 0x30, 0x35, 0x29, 0x28, 0x45, 0x4d, 0x46, 
0x49, 0x3d, 0x34, 0x29, 0x29, 0x29, 0x29 


.g......"..[(DESCRIPTION=(TMP=)(VSNNUM=202375680)(ERR=12505)(ERROR_STACK=(ERROR=(CODE=12505)(EMFI=4))))

ASDB

0x00, 
0xa6,  ==> Paket boyu 166 
0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 
0x01, 0x34, 0x01, 0x2c, 0x00, 0x00, 0x08, 0x00, 
0x7f, 0xff, 0x4f, 0x98, 0x00, 0x00, 0x00, 0x01, 
0x00, 0x84, 0x00, 0x22, 0x00, 0x00, 0x00, 0x00, 
0x01, 0x01, 0x28, 0x44, 0x45, 0x53, 0x43, 0x52, 
0x49, 0x50, 0x54, 0x49, 0x4f, 0x4e, 0x3d, 0x28, 
0x43, 0x4f, 0x4e, 0x4e, 0x45, 0x43, 0x54, 0x5f, 
0x44, 0x41, 0x54, 0x41, 0x3d, 0x28, 0x53, 0x49, 
0x44, 0x3d, 

0x41, 0x53, 0x44, 0x42, ==> SID=ASBD : 162+4 = 166 Paket boyu

0x0d, 0x29, 0x28, 0x43, 0x49, 0x44, 0x3d, 0x28, 0x50, 0x52, 
0x4f, 0x47, 0x52, 0x41, 0x4d, 0x3d, 0x29, 0x28, 
0x48, 0x4f, 0x53, 0x54, 0x3d, 0x5f, 0x5f, 0x6a, 
0x64, 0x62, 0x63, 0x5f, 0x5f, 0x29, 0x28, 0x55, 
0x53, 0x45, 0x52, 0x3d, 0x29, 0x29, 0x29, 0x28, 
0x41, 0x44, 0x44, 0x52, 0x45, 0x53, 0x53, 0x3d, 
0x28, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x43, 0x4f, 
0x4c, 0x3d, 0x74, 0x63, 0x70, 0x29, 0x28, 0x48, 
0x4f, 0x53, 0x54, 0x3d, 0x31, 0x39, 0x32, 0x2e, 
0x32, 0x30, 0x30, 0x2e, 0x31, 0x31, 0x2e, 0x39, 
0x29, 0x28, 0x50, 0x4f, 0x52, 0x54, 0x3d, 0x31, 
0x35, 0x32, 0x31, 0x29, 0x29, 0x29 


.........4.,......O........"......(DESCRIPTION=(CONNECT_DATA=(SID=ASDB
)(CID=(PROGRAM=)(HOST=__jdbc__)(USER=)))(ADDRESS=(PROTOCOL=tcp)(HOST=192.200.11.9)(PORT=1521))).g......"..[(DESCRIPTION=(TMP=)(VSNNUM=202375680)(ERR=12505)(ERROR_STACK=(ERROR=(CODE=12505)(EMFI=4))))       



Başarılı olma durumunda giden ve gelen paketler

SID: DB3

char peer0_0[] = { /* Packet 541 */
0x00, 0xa5, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 
0x01, 0x34, 0x01, 0x2c, 0x00, 0x00, 0x08, 0x00, 
0x7f, 0xff, 0x4f, 0x98, 0x00, 0x00, 0x00, 0x01, 
0x00, 0x83, 0x00, 0x22, 0x00, 0x00, 0x00, 0x00, 
0x01, 0x01, 0x28, 0x44, 0x45, 0x53, 0x43, 0x52, 
0x49, 0x50, 0x54, 0x49, 0x4f, 0x4e, 0x3d, 0x28, 
0x43, 0x4f, 0x4e, 0x4e, 0x45, 0x43, 0x54, 0x5f, 
0x44, 0x41, 0x54, 0x41, 0x3d, 0x28, 0x53, 0x49, 
0x44, 0x3d, 0x44, 0x42, 0x33, 0x0d, 0x29, 0x28, 
0x43, 0x49, 0x44, 0x3d, 0x28, 0x50, 0x52, 0x4f, 
0x47, 0x52, 0x41, 0x4d, 0x3d, 0x29, 0x28, 0x48, 
0x4f, 0x53, 0x54, 0x3d, 0x5f, 0x5f, 0x6a, 0x64, 
0x62, 0x63, 0x5f, 0x5f, 0x29, 0x28, 0x55, 0x53, 
0x45, 0x52, 0x3d, 0x29, 0x29, 0x29, 0x28, 0x41, 
0x44, 0x44, 0x52, 0x45, 0x53, 0x53, 0x3d, 0x28, 
0x50, 0x52, 0x4f, 0x54, 0x4f, 0x43, 0x4f, 0x4c, 
0x3d, 0x74, 0x63, 0x70, 0x29, 0x28, 0x48, 0x4f, 
0x53, 0x54, 0x3d, 0x31, 0x39, 0x32, 0x2e, 0x32, 
0x30, 0x30, 0x2e, 0x31, 0x31, 0x2e, 0x39, 0x29, 
0x28, 0x50, 0x4f, 0x52, 0x54, 0x3d, 0x31, 0x35, 
0x32, 0x31, 0x29, 0x29, 0x29 };

.........4.,......O........"......(DESCRIPTION=(CONNECT_DATA=(SID=DB3
)(CID=(PROGRAM=)(HOST=__jdbc__)(USER=)))(ADDRESS=(PROTOCOL=tcp)(HOST=192.200.11.9)(PORT=1521)))

Dönen Cevap

char peer1_0[] = { /* Packet 543 */
0x00, 0x08, 0x00, 0x00, 0x0b, 0x00, 0x00, 0x00 };

........


SID Kontrol eden basit program

import socket


sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
result = sock.connect_ex(('192.200.11.9', 1521))
print('Connection Result  >> ' , result)
 

send_msg= bytearray ([
0x00, 0xa6, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 
0x01, 0x34, 0x01, 0x2c, 0x00, 0x00, 0x08, 0x00, 
0x7f, 0xff, 0x4f, 0x98, 0x00, 0x00, 0x00, 0x01, 
0x00, 0x84, 0x00, 0x22, 0x00, 0x00, 0x00, 0x00, 
0x01, 0x01, 0x28, 0x44, 0x45, 0x53, 0x43, 0x52, 
0x49, 0x50, 0x54, 0x49, 0x4f, 0x4e, 0x3d, 0x28, 
0x43, 0x4f, 0x4e, 0x4e, 0x45, 0x43, 0x54, 0x5f, 
0x44, 0x41, 0x54, 0x41, 0x3d, 0x28, 0x53, 0x49, 
0x44, 0x3d, 

0x41, 0x53, 0x44, 0x42, 

0x0d, 0x29, 0x28, 0x43, 0x49, 0x44, 0x3d, 0x28, 0x50, 0x52, 
0x4f, 0x47, 0x52, 0x41, 0x4d, 0x3d, 0x29, 0x28, 
0x48, 0x4f, 0x53, 0x54, 0x3d, 0x5f, 0x5f, 0x6a, 
0x64, 0x62, 0x63, 0x5f, 0x5f, 0x29, 0x28, 0x55, 
0x53, 0x45, 0x52, 0x3d, 0x29, 0x29, 0x29, 0x28, 
0x41, 0x44, 0x44, 0x52, 0x45, 0x53, 0x53, 0x3d, 
0x28, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x43, 0x4f, 
0x4c, 0x3d, 0x74, 0x63, 0x70, 0x29, 0x28, 0x48, 
0x4f, 0x53, 0x54, 0x3d, 0x31, 0x39, 0x32, 0x2e, 
0x32, 0x30, 0x30, 0x2e, 0x31, 0x31, 0x2e, 0x39, 
0x29, 0x28, 0x50, 0x4f, 0x52, 0x54, 0x3d, 0x31, 
0x35, 0x32, 0x31, 0x29, 0x29, 0x29 
] )

sock.send(send_msg)
msg = sock.recv(2048)
sock.close()
print('FULL RETURNED MESSAGE')
print ('Received  >> ',msg )